# -*- coding: utf-8 -*-
"""threads_Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10t5_xdjnwihSJt7yfPgr9LeRWA7wZHJL
"""

import threading

# Função que calcula a soma de uma parte da lista
def calcular_soma(parte, resultado, indice):
    resultado[indice] = sum(parte)

def main(lista, numero_threads):
    tamanho_lista = len(lista)

     # Dividir a lista em partes de acordo com o número de threads
    partes = []
    for i in range(numero_threads):
        inicio = i * tamanho_lista // numero_threads
        fim = (i + 1) * tamanho_lista // numero_threads
        partes.append(lista[inicio:fim])

    # Array para armazenar os resultados das threads
    resultado = [0] * numero_threads

    # Criar e iniciar as threads
    threads = []
    for i in range(numero_threads):
        thread = threading.Thread(target=calcular_soma, args=(partes[i], resultado, i))
        threads.append(thread)
        thread.start()

    # Esperar as threads terminarem
    for thread in threads:
        thread.join()

    # Agregar os resultados das threads
    soma_total = sum(resultado)
    print(f"Soma total: {soma_total}")

if __name__ == "__main__":

    # Três casos de teste diferentes

    # Caso 1
    # lista = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    # numero_threads = 2

    # Caso 2
    # lista = [10, 20, 30, 40, 50, 60, 70, 80, 90]
    # numero_threads = 3

    # Caso 3
    lista = [5, 15, 25, 35, 45, 55, 65, 75, 85, 95]
    numero_threads = 5


    main(lista, numero_threads)
    print("-" * 30)